import{v as j,k as A,S as U,R as I}from"./index-BIGGLZzU.js";function V(a,e){for(var t=0;t<e.length;t++){const o=e[t];if(typeof o!="string"&&!Array.isArray(o)){for(const r in o)if(r!=="default"&&!(r in a)){const n=Object.getOwnPropertyDescriptor(o,r);n&&Object.defineProperty(a,r,n.get?n:{enumerable:!0,get:()=>o[r]})}}}return Object.freeze(Object.defineProperty(a,Symbol.toStringTag,{value:"Module"}))}var M=Object.create,p=Object.defineProperty,L=Object.getOwnPropertyDescriptor,N=Object.getOwnPropertyNames,Y=Object.getPrototypeOf,B=Object.prototype.hasOwnProperty,z=(a,e,t)=>e in a?p(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t,F=(a,e)=>{for(var t in e)p(a,t,{get:e[t],enumerable:!0})},O=(a,e,t,o)=>{if(e&&typeof e=="object"||typeof e=="function")for(let r of N(e))!B.call(a,r)&&r!==t&&p(a,r,{get:()=>e[r],enumerable:!(o=L(e,r))||o.enumerable});return a},x=(a,e,t)=>(t=a!=null?M(Y(a)):{},O(!a||!a.__esModule?p(t,"default",{value:a,enumerable:!0}):t,a)),G=a=>O(p({},"__esModule",{value:!0}),a),s=(a,e,t)=>(z(a,typeof e!="symbol"?e+"":e,t),t),k={};F(k,{default:()=>T});var S=G(k),b=x(A),y=U,D=I;const Q="https://www.youtube.com/iframe_api",v="YT",Z="onYouTubeIframeAPIReady",f=/[?&](?:list|channel)=([a-zA-Z0-9_-]+)/,w=/user\/([a-zA-Z0-9_-]+)\/?/,H=/youtube-nocookie\.com/,K="https://www.youtube-nocookie.com";class T extends b.Component{constructor(){super(...arguments),s(this,"callPlayer",y.callPlayer),s(this,"parsePlaylist",e=>{if(e instanceof Array)return{listType:"playlist",playlist:e.map(this.getID).join(",")};if(f.test(e)){const[,t]=e.match(f);return{listType:"playlist",list:t.replace(/^UC/,"UU")}}if(w.test(e)){const[,t]=e.match(w);return{listType:"user_uploads",list:t}}return{}}),s(this,"onStateChange",e=>{const{data:t}=e,{onPlay:o,onPause:r,onBuffer:n,onBufferEnd:P,onEnded:g,onReady:m,loop:u,config:{playerVars:i,onUnstarted:h}}=this.props,{UNSTARTED:d,PLAYING:c,PAUSED:l,BUFFERING:E,ENDED:R,CUED:_}=window[v].PlayerState;if(t===d&&h(),t===c&&(o(),P()),t===l&&r(),t===E&&n(),t===R){const C=!!this.callPlayer("getPlaylist");u&&!C&&(i.start?this.seekTo(i.start):this.play()),g()}t===_&&m()}),s(this,"mute",()=>{this.callPlayer("mute")}),s(this,"unmute",()=>{this.callPlayer("unMute")}),s(this,"ref",e=>{this.container=e})}componentDidMount(){this.props.onMount&&this.props.onMount(this)}getID(e){return!e||e instanceof Array||f.test(e)?null:e.match(D.MATCH_URL_YOUTUBE)[1]}load(e,t){const{playing:o,muted:r,playsinline:n,controls:P,loop:g,config:m,onError:u}=this.props,{playerVars:i,embedOptions:h}=m,d=this.getID(e);if(t){if(f.test(e)||w.test(e)||e instanceof Array){this.player.loadPlaylist(this.parsePlaylist(e));return}this.player.cueVideoById({videoId:d,startSeconds:(0,y.parseStartTime)(e)||i.start,endSeconds:(0,y.parseEndTime)(e)||i.end});return}(0,y.getSDK)(Q,v,Z,c=>c.loaded).then(c=>{this.container&&(this.player=new c.Player(this.container,{width:"100%",height:"100%",videoId:d,playerVars:{autoplay:o?1:0,mute:r?1:0,controls:P?1:0,start:(0,y.parseStartTime)(e),end:(0,y.parseEndTime)(e),origin:window.location.origin,playsinline:n?1:0,...this.parsePlaylist(e),...i},events:{onReady:()=>{g&&this.player.setLoop(!0),this.props.onReady()},onPlaybackRateChange:l=>this.props.onPlaybackRateChange(l.data),onPlaybackQualityChange:l=>this.props.onPlaybackQualityChange(l),onStateChange:this.onStateChange,onError:l=>u(l.data)},host:H.test(e)?K:void 0,...h}))},u),h.events&&console.warn("Using `embedOptions.events` will likely break things. Use ReactPlayerâ€™s callback props instead, eg onReady, onPlay, onPause")}play(){this.callPlayer("playVideo")}pause(){this.callPlayer("pauseVideo")}stop(){document.body.contains(this.callPlayer("getIframe"))&&this.callPlayer("stopVideo")}seekTo(e,t=!1){this.callPlayer("seekTo",e),!t&&!this.props.playing&&this.pause()}setVolume(e){this.callPlayer("setVolume",e*100)}setPlaybackRate(e){this.callPlayer("setPlaybackRate",e)}setLoop(e){this.callPlayer("setLoop",e)}getDuration(){return this.callPlayer("getDuration")}getCurrentTime(){return this.callPlayer("getCurrentTime")}getSecondsLoaded(){return this.callPlayer("getVideoLoadedFraction")*this.getDuration()}render(){const{display:e}=this.props,t={width:"100%",height:"100%",display:e};return b.default.createElement("div",{style:t},b.default.createElement("div",{ref:this.ref}))}}s(T,"displayName","YouTube");s(T,"canPlay",D.canPlay.youtube);const $=j(S),J=V({__proto__:null,default:$},[S]);export{J as Y};
