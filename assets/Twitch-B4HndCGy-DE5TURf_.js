import{v as j,k as w,S as D,R as C}from"./index-BIGGLZzU.js";function I(t,e){for(var r=0;r<e.length;r++){const s=e[r];if(typeof s!="string"&&!Array.isArray(s)){for(const a in s)if(a!=="default"&&!(a in t)){const l=Object.getOwnPropertyDescriptor(s,a);l&&Object.defineProperty(t,a,l.get?l:{enumerable:!0,get:()=>s[a]})}}}return Object.freeze(Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}))}var M=Object.create,i=Object.defineProperty,S=Object.getOwnPropertyDescriptor,A=Object.getOwnPropertyNames,N=Object.getPrototypeOf,H=Object.prototype.hasOwnProperty,R=(t,e,r)=>e in t?i(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,U=(t,e)=>{for(var r in e)i(t,r,{get:e[r],enumerable:!0})},m=(t,e,r,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let a of A(e))!H.call(t,a)&&a!==r&&i(t,a,{get:()=>e[a],enumerable:!(s=S(e,a))||s.enumerable});return t},V=(t,e,r)=>(r=t!=null?M(N(t)):{},m(!t||!t.__esModule?i(r,"default",{value:t,enumerable:!0}):r,t)),k=t=>m(i({},"__esModule",{value:!0}),t),n=(t,e,r)=>(R(t,typeof e!="symbol"?e+"":e,r),r),f={};U(f,{default:()=>y});var g=k(f),d=V(w),h=D,c=C;const W="https://player.twitch.tv/js/embed/v1.js",x="Twitch",F="twitch-player-";class y extends d.Component{constructor(){super(...arguments),n(this,"callPlayer",h.callPlayer),n(this,"playerID",this.props.config.playerId||`${F}${(0,h.randomString)()}`),n(this,"mute",()=>{this.callPlayer("setMuted",!0)}),n(this,"unmute",()=>{this.callPlayer("setMuted",!1)})}componentDidMount(){this.props.onMount&&this.props.onMount(this)}load(e,r){const{playsinline:s,onError:a,config:l,controls:P}=this.props,o=c.MATCH_URL_TWITCH_CHANNEL.test(e),p=o?e.match(c.MATCH_URL_TWITCH_CHANNEL)[1]:e.match(c.MATCH_URL_TWITCH_VIDEO)[1];if(r){o?this.player.setChannel(p):this.player.setVideo("v"+p);return}(0,h.getSDK)(W,x).then(u=>{this.player=new u.Player(this.playerID,{video:o?"":p,channel:o?p:"",height:"100%",width:"100%",playsinline:s,autoplay:this.props.playing,muted:this.props.muted,controls:o?!0:P,time:(0,h.parseStartTime)(e),...l.options});const{READY:b,PLAYING:v,PAUSE:E,ENDED:O,ONLINE:L,OFFLINE:T,SEEK:_}=u.Player;this.player.addEventListener(b,this.props.onReady),this.player.addEventListener(v,this.props.onPlay),this.player.addEventListener(E,this.props.onPause),this.player.addEventListener(O,this.props.onEnded),this.player.addEventListener(_,this.props.onSeek),this.player.addEventListener(L,this.props.onLoaded),this.player.addEventListener(T,this.props.onLoaded)},a)}play(){this.callPlayer("play")}pause(){this.callPlayer("pause")}stop(){this.callPlayer("pause")}seekTo(e,r=!0){this.callPlayer("seek",e),r||this.pause()}setVolume(e){this.callPlayer("setVolume",e)}getDuration(){return this.callPlayer("getDuration")}getCurrentTime(){return this.callPlayer("getCurrentTime")}getSecondsLoaded(){return null}render(){const e={width:"100%",height:"100%"};return d.default.createElement("div",{style:e,id:this.playerID})}}n(y,"displayName","Twitch");n(y,"canPlay",c.canPlay.twitch);n(y,"loopOnEnded",!0);const K=j(g),G=I({__proto__:null,default:K},[g]);export{G as T};
